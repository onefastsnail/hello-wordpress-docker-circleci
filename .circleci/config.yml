version: 2
jobs:

  # define our job
  build-and-deploy:

    # define the executor and image to use
    docker:
      - image: circleci/php:7.1-node-browsers

    # define where we checkout out code etc
    working_directory: ~/myapp

    # now the fun part, define our build steps
    steps:

      # checkout our source code
      - checkout

      # run composer and cache the result
      - run: sudo composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.json" }}
            - composer-v1-
      - run: composer install -n --prefer-dist --no-dev
      - save_cache:
          paths:
            - ./vendor
          key: composer-v1-{{ checksum "composer.json" }}

      # npm install and cache the result
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install --production
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      # run a little test
      - run: npm run test

      # build our project
      - run: npm run build

      # a remote environment will be created, and our current primary container will be configured to use it, any docker-related commands we use will be safely executed in this new environment
      - setup_remote_docker

      # build image, push to dockerhub, and deploy
      - run:
          name: Build application Docker image
          command: |
            docker build -t $DOCKER_REPO:$CIRCLE_BRANCH .
      - run:
          name: Push the Docker image to the registry
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push $DOCKER_REPO:$CIRCLE_BRANCH
      # - run:
      #     name: Deploy, ssh in, pull image, and run
      #     command: |
      #       cat deploy.sh | ssh -o StrictHostKeyChecking=no $PRODUCTION_USER@$PRODUCTION_IP

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-deploy:
          filters:
            branches:
              only:
                - master
